{"ast":null,"code":"var _jsxFileName = \"/home/misha/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0438/Projects/ToDoList/client/src/components/Projects/NewProjectForm.jsx\";\nimport React from \"react\";\nimport axios from 'axios';\nexport default class NewProjectForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        project: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n\n      if (this.state.project !== \"\") {\n        console.warn('Відправлений проект: ' + this.state.project);\n        await axios.post(\"http://localhost:3001/sendproject\", {\n          newproject: this.state.project\n        }).then(() => {\n          this.clearForm();\n          this.props.getList();\n        });\n      } else {\n        console.log(\"Please, enter name of project\");\n      }\n    };\n\n    this.clearForm = () => {\n      this.setState({\n        project: \"\"\n      });\n      this.props.toogleVisibilityForm();\n    };\n\n    this.render = () => {\n      return React.createElement(\"form\", {\n        id: \"form-send-project\",\n        name: \"form-send-project\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.project,\n        onChange: this.handleChange,\n        className: \"form-add-input\",\n        id: \"new-project\",\n        name: \"newproject\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"red-button-accept form-add-buttons\",\n        id: \"send-project\",\n        name: \"send-project\",\n        value: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"reset\",\n        onClick: this.clearForm,\n        className: \"button-cancel form-add-buttons\",\n        id: \"reset-project\",\n        value: \"\\u0421\\u043A\\u0430\\u0441\\u0443\\u0432\\u0430\\u0442\\u0438\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n    };\n\n    this.state = {\n      project: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n}","map":{"version":3,"sources":["/home/misha/Документи/Projects/ToDoList/client/src/components/Projects/NewProjectForm.jsx"],"names":["React","axios","NewProjectForm","Component","constructor","props","handleChange","event","setState","project","target","value","handleSubmit","preventDefault","state","console","warn","post","newproject","then","clearForm","getList","log","toogleVisibilityForm","render","bind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAA6C;AACxDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,YATmB,GASHC,KAAD,IAAW;AACtB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAAxB,OAAd;AACH,KAXkB;;AAAA,SAanBC,YAbmB,GAaJ,MAAOL,KAAP,IAAiB;AAC5BA,MAAAA,KAAK,CAACM,cAAN;;AACA,UAAI,KAAKC,KAAL,CAAWL,OAAX,KAAuB,EAA3B,EAA+B;AAC3BM,QAAAA,OAAO,CAACC,IAAR,CAAa,0BAA0B,KAAKF,KAAL,CAAWL,OAAlD;AACA,cAAMR,KAAK,CAACgB,IAAN,sCAAgD;AAClDC,UAAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWL;AAD2B,SAAhD,EAEHU,IAFG,CAEE,MAAM;AACV,eAAKC,SAAL;AACA,eAAKf,KAAL,CAAWgB,OAAX;AACH,SALK,CAAN;AAMH,OARD,MAQO;AACHN,QAAAA,OAAO,CAACO,GAAR,CAAY,+BAAZ;AACH;AACJ,KA1BkB;;AAAA,SA4BnBF,SA5BmB,GA4BP,MAAM;AACd,WAAKZ,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,WAAKJ,KAAL,CAAWkB,oBAAX;AACH,KA/BkB;;AAAA,SAiCnBC,MAjCmB,GAiCV,MAAM;AACX,aACI;AAAM,QAAA,EAAE,EAAC,mBAAT;AAA6B,QAAA,IAAI,EAAC,mBAAlC;AAAsD,QAAA,QAAQ,EAAE,KAAKZ,YAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWL,OAArC;AAA8C,QAAA,QAAQ,EAAE,KAAKH,YAA7D;AAA2E,QAAA,SAAS,EAAC,gBAArF;AAAsG,QAAA,EAAE,EAAC,aAAzG;AAAuH,QAAA,IAAI,EAAC,YAA5H;AAAyI,QAAA,YAAY,EAAC,KAAtJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EACkK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADlK,EAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAC,oCAA/B;AAAoE,QAAA,EAAE,EAAC,cAAvE;AAAsF,QAAA,IAAI,EAAC,cAA3F;AAA0G,QAAA,KAAK,EAAC,sCAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,OAAO,EAAE,KAAKc,SAAlC;AAA6C,QAAA,SAAS,EAAC,gCAAvD;AAAwF,QAAA,EAAE,EAAC,eAA3F;AAA2G,QAAA,KAAK,EAAC,wDAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ;AAOH,KAzCkB;;AAEf,SAAKN,KAAL,GAAa;AACTL,MAAAA,OAAO,EAAE;AADA,KAAb;AAGA,SAAKH,YAAL,GAAoB,KAAKA,YAAL,CAAkBmB,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKb,YAAL,GAAoB,KAAKA,YAAL,CAAkBa,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AARuD","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\n\nexport default class NewProjectForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            project: \"\"\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange = (event) => {\n        this.setState({ project: event.target.value });\n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        if (this.state.project !== \"\") {\n            console.warn('Відправлений проект: ' + this.state.project);\n            await axios.post(`http://localhost:3001/sendproject`, {\n                newproject: this.state.project\n            }).then(() => {\n                this.clearForm();\n                this.props.getList();\n            })\n        } else {\n            console.log(\"Please, enter name of project\");\n        }\n    }\n\n    clearForm = () => {\n        this.setState({ project: \"\" });\n        this.props.toogleVisibilityForm();\n    }\n\n    render = () => {\n        return (\n            <form id=\"form-send-project\" name=\"form-send-project\" onSubmit={this.handleSubmit}>\n                <input type=\"text\" value={this.state.project} onChange={this.handleChange} className=\"form-add-input\" id=\"new-project\" name=\"newproject\" autoComplete=\"off\" /><br />\n                <input type=\"submit\" className=\"red-button-accept form-add-buttons\" id=\"send-project\" name=\"send-project\" value=\"Додати\" />\n                <input type=\"reset\" onClick={this.clearForm} className=\"button-cancel form-add-buttons\" id=\"reset-project\" value=\"Скасувати\" />\n            </form>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/misha/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0438/Projects/ToDoList/client/src/components/Projects/MenuProjects.js\";\nimport React from \"react\";\nimport NewProjectForm from './NewProjectForm';\nimport ProjectsList from './ProjectsList';\n\nclass MenuProjects extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: \"якась шняга\"\n    };\n\n    this.sendFormNewProject = async e => {\n      e.preventDefault();\n      let formSendProject = document.forms[\"form-send-project\"];\n      let newProject = formSendProject.elements[\"newproject\"].value;\n\n      if (newProject !== \"\") {\n        // Serialize data to JSON\n        let project = JSON.stringify({\n          newproject: newProject\n        });\n        let request = new XMLHttpRequest(); // Send form to adress \"/sendproject\"\n\n        request.open(\"POST\", \"/sendproject\", true);\n        request.setRequestHeader(\"Content-Type\", \"application/json\"); // Clear form\n\n        document.getElementById('new-project').value = \"\";\n        console.log(project);\n        request.send(project);\n\n        request.onreadystatechange = function (data) {\n          let json = data.target.response;\n          this.setState = {\n            list: json\n          }; // for(const key in json) {\n          //     console.log(json[key].project);\n          // }\n        };\n      }\n    };\n  }\n\n  componentDidMount() {\n    let request = new XMLHttpRequest();\n    request.open('GET', \"/projectsList\");\n    request.responseType = 'json';\n    request.send();\n\n    request.onreadystatechange = function () {\n      let json = request.response;\n      console.log(JSON.stringify(json)); // this.setState = ({ list: json });\n    };\n  }\n\n  render() {\n    console.log(\"My list is:\" + this.state.list);\n    return React.createElement(\"div\", {\n      className: \"menu-item\",\n      id: \"item-project\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"menu-item-head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0438\"), React.createElement(\"b\", {\n      className: \"menu-button-add\",\n      id: \"add-project\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \" + \")), React.createElement(\"div\", {\n      className: \"form-add-div\",\n      id: \"form-add-divproject\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(ProjectsList, {\n      list: this.state.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"menu-item-headbutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"\\u041D\\u043E\\u0432\\u0438\\u0439 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\")), React.createElement(NewProjectForm, {\n      sendFormNewProject: this.sendFormNewProject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default MenuProjects;","map":{"version":3,"sources":["/home/misha/Документи/Projects/ToDoList/client/src/components/Projects/MenuProjects.js"],"names":["React","NewProjectForm","ProjectsList","MenuProjects","Component","state","list","sendFormNewProject","e","preventDefault","formSendProject","document","forms","newProject","elements","value","project","JSON","stringify","newproject","request","XMLHttpRequest","open","setRequestHeader","getElementById","console","log","send","onreadystatechange","data","json","target","response","setState","componentDidMount","responseType","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport NewProjectForm from './NewProjectForm';\nimport ProjectsList from './ProjectsList';\n\nclass MenuProjects extends React.Component {\n    state = {\n        list: \"якась шняга\"\n    }\n\n    componentDidMount() {\n        let request = new XMLHttpRequest();\n        request.open('GET', \"/projectsList\");\n        request.responseType = 'json';\n        request.send();\n        request.onreadystatechange = function() {\n            let json = request.response;\n            console.log(JSON.stringify(json));\n            // this.setState = ({ list: json });\n        }\n    }\n\n    sendFormNewProject = async (e) => {\n        e.preventDefault();\n\n        let formSendProject = document.forms[\"form-send-project\"];\n        let newProject = formSendProject.elements[\"newproject\"].value;\n        if (newProject !== \"\") {\n            // Serialize data to JSON\n            let project = JSON.stringify({ newproject: newProject });\n            let request = new XMLHttpRequest();\n            // Send form to adress \"/sendproject\"\n            request.open(\"POST\", \"/sendproject\", true);\n            request.setRequestHeader(\"Content-Type\", \"application/json\");\n            // Clear form\n            document.getElementById('new-project').value = \"\";\n            console.log(project);\n            request.send(project);\n            request.onreadystatechange = function (data) {\n                let json = data.target.response;\n                this.setState = ({ list: json });\n                // for(const key in json) {\n                //     console.log(json[key].project);\n                // }\n                \n            }\n        }\n    }\n\n    render () {\n        console.log(\"My list is:\" + this.state.list);\n        return ( \n            <div className=\"menu-item\" id=\"item-project\">\n                <div className=\"menu-item-head\" >\n                    <h4>Проекти</h4><b className=\"menu-button-add\" id=\"add-project\"> + </b>\n                </div>\n                <div className=\"form-add-div\" id=\"form-add-divproject\">\n                    <ProjectsList list={ this.state.list }/>\n                    <div className=\"menu-item-headbutton\"><b>Новий проект</b></div>\n                    <NewProjectForm sendFormNewProject = {this.sendFormNewProject}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MenuProjects;\n"]},"metadata":{},"sourceType":"module"}
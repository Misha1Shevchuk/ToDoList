{"ast":null,"code":"var _jsxFileName = \"/home/misha/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0438/Projects/ToDoList/client/src/components/Projects/NewProjectForm.jsx\";\nimport React from \"react\";\n\nclass NewProjectForm extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.render = props => {\n      return React.createElement(\"form\", {\n        id: \"form-send-project\",\n        name: \"form-send-project\",\n        onSubmit: props.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-add-input\",\n        id: \"new-project\",\n        type: \"text\",\n        name: \"newproject\",\n        autoComplete: \"off\",\n        value: this.state.project,\n        onChange: this.onChangeProject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"red-button-accept form-add-buttons\",\n        id: \"send-project\",\n        type: \"submit\",\n        name: \"send-project\",\n        value: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"button-cancel form-add-buttons\",\n        id: \"reset-project\",\n        type: \"reset\",\n        value: \"\\u0421\\u043A\\u0430\\u0441\\u0443\\u0432\\u0430\\u0442\\u0438\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }));\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      fetch(\"http://localhost:3001/sendproject\", {\n        method: \"POST\",\n        body: this.state.project\n      }).then(results => {\n        return results.json();\n      }).then(data => {\n        console.log(data);\n        let projects = data.map(proj => {\n          return React.createElement(ItemProject, {\n            key: proj.id_project,\n            element: proj,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          });\n        });\n        this.setState({\n          list: projects\n        });\n      });\n    };\n\n    this.state = {\n      project: ''\n    };\n    this.onChangeProject = this.onChangeProject.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n}\n\nexport default NewProjectForm;","map":{"version":3,"sources":["/home/misha/Документи/Projects/ToDoList/client/src/components/Projects/NewProjectForm.jsx"],"names":["React","NewProjectForm","Component","constructor","props","render","handleSubmit","state","project","onChangeProject","event","preventDefault","fetch","method","body","then","results","json","data","console","log","projects","map","proj","id_project","setState","list","bind","onSubmit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAN,SAA6BD,KAAK,CAACE,SAAnC,CAA6C;AACzCC,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACf,UAAMA,MAAN;;AADe,SAQnBC,MARmB,GAQVD,KAAK,IAAI;AACd,aACA;AAAM,QAAA,EAAE,EAAC,mBAAT;AAA6B,QAAA,IAAI,EAAC,mBAAlC;AAAsD,QAAA,QAAQ,EAAEA,KAAK,CAACE,YAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAC,gBAAjB;AAAkC,QAAA,EAAE,EAAC,aAArC;AAAmD,QAAA,IAAI,EAAC,MAAxD;AAA+D,QAAA,IAAI,EAAC,YAApE;AAAiF,QAAA,YAAY,EAAC,KAA9F;AAAoG,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,OAAtH;AAA+H,QAAA,QAAQ,EAAE,KAAKC,eAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EACoK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADpK,EAEI;AAAO,QAAA,SAAS,EAAC,oCAAjB;AAAsD,QAAA,EAAE,EAAC,cAAzD;AAAwE,QAAA,IAAI,EAAC,QAA7E;AAAsF,QAAA,IAAI,EAAC,cAA3F;AAA0G,QAAA,KAAK,EAAC,sCAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAO,QAAA,SAAS,EAAC,gCAAjB;AAAkD,QAAA,EAAE,EAAC,eAArD;AAAqE,QAAA,IAAI,EAAC,OAA1E;AAAkF,QAAA,KAAK,EAAC,wDAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADA;AAOH,KAhBkB;;AAAA,SAqCnBH,YArCmB,GAqCHI,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACC,cAAN;AAEAC,MAAAA,KAAK,sCAAsC;AACvCC,QAAAA,MAAM,EAAE,MAD+B;AAEvCC,QAAAA,IAAI,EAAE,KAAKP,KAAL,CAAWC;AAFsB,OAAtC,CAAL,CAGKO,IAHL,CAGUC,OAAO,IAAI;AACb,eAAOA,OAAO,CAACC,IAAR,EAAP;AACH,OALL,EAKOF,IALP,CAKYG,IAAI,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,YAAIG,QAAQ,GAAGH,IAAI,CAACI,GAAL,CAAUC,IAAD,IAAU;AAC9B,iBACO,oBAAC,WAAD;AAAa,YAAA,GAAG,EAAEA,IAAI,CAACC,UAAvB;AAAmC,YAAA,OAAO,EAAED,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADP;AAGH,SAJc,CAAf;AAKJ,aAAKE,QAAL,CAAc;AAAEC,UAAAA,IAAI,EAAEL;AAAR,SAAd;AACH,OAbD;AAcH,KAtDkB;;AAEf,SAAKd,KAAL,GAAa;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAb;AAEA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBkB,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAPsC;;AA0D7C,eAAe1B,cAAf","sourcesContent":["import React from \"react\";\n\nclass NewProjectForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {project: ''};\n  \n        this.onChangeProject = this.onChangeProject.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n      }\n\n    render = props => {\n        return (\n        <form id=\"form-send-project\" name=\"form-send-project\" onSubmit={props.handleSubmit}>\n            <input className=\"form-add-input\" id=\"new-project\" type=\"text\" name=\"newproject\" autoComplete=\"off\" value={this.state.project} onChange={this.onChangeProject}/><br />\n            <input className=\"red-button-accept form-add-buttons\" id=\"send-project\" type=\"submit\" name=\"send-project\" value=\"Додати\"/>\n            <input className=\"button-cancel form-add-buttons\" id=\"reset-project\" type=\"reset\" value=\"Скасувати\" />\n        </form>\n        );\n    }\n    // handleSubmit = (e) => {\n    //     e.preventDefault();\n\n    //     let formSendProject = document.forms[\"form-send-project\"];\n    //     let newProject = formSendProject.elements[\"newproject\"].value;\n    //     if (newProject !== \"\") {\n    //         // Serialize data to JSON\n    //         let project = JSON.stringify({ newproject: newProject });\n    //         let request = new XMLHttpRequest();\n    //         // Send form to adress \"/sendproject\"\n    //         request.open(\"POST\", \"/sendproject\", true);\n    //         request.setRequestHeader(\"Content-Type\", \"application/json\");\n    //         // Clear form\n    //         document.getElementById('new-project').value = \"\";\n    //         console.log(project);\n    //         this.getObjetProject();\n    //         request.send(project);\n    //     }\n    // }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        fetch(`http://localhost:3001/sendproject`, {\n            method: \"POST\",\n            body: this.state.project })\n            .then(results => {\n                return results.json();\n            }).then(data => {\n                console.log(data);\n                let projects = data.map((proj) => {\n                    return (\n                           <ItemProject key={proj.id_project} element={proj} />\n                    )\n                })\n            this.setState({ list: projects });\n        })\n    }\n}\n\nexport default NewProjectForm;"]},"metadata":{},"sourceType":"module"}
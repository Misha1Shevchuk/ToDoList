{"map":"{\"version\":3,\"sources\":[\"/home/misha/Документи/Projects/ToDoList/client/src/components/Header.jsx\",\"/home/misha/Документи/Projects/ToDoList/client/src/components/Labels/NewLabelForm.jsx\",\"/home/misha/Документи/Projects/ToDoList/client/src/components/Labels/LabelsList.jsx\",\"/home/misha/Документи/Projects/ToDoList/client/src/components/Labels/MenuLabels.jsx\",\"/home/misha/Документи/Projects/ToDoList/client/src/components/Projects/NewProjectForm.jsx\",\"/home/misha/Документи/Projects/ToDoList/client/src/components/Projects/ItemProject.jsx\",\"/home/misha/Документи/Projects/ToDoList/client/src/components/Projects/ProjectsList.jsx\",\"/home/misha/Документи/Projects/ToDoList/client/src/components/Projects/MenuProjects.jsx\",\"/home/misha/Документи/Projects/ToDoList/client/src/components/Menu.jsx\",\"/home/misha/Документи/Projects/ToDoList/client/src/components/Tasks/NewTaskForm.jsx\",\"/home/misha/Документи/Projects/ToDoList/client/src/components/Tasks/ItemTask.jsx\",\"/home/misha/Документи/Projects/ToDoList/client/src/components/Tasks/UnfinishedTasks.jsx\",\"/home/misha/Документи/Projects/ToDoList/client/src/components/Tasks/FinishedTasks.jsx\",\"/home/misha/Документи/Projects/ToDoList/client/src/components/WorkSpace.jsx\",\"/home/misha/Документи/Projects/ToDoList/client/src/components/Content.jsx\",\"/home/misha/Документи/Projects/ToDoList/client/src/components/Wrapper.jsx\",\"/home/misha/Документи/Projects/ToDoList/client/src/App.js\",\"/home/misha/Документи/Projects/ToDoList/client/src/serviceWorker.js\",\"/home/misha/Документи/Projects/ToDoList/client/src/index.js\"],\"names\":[\"Header\",\"react_default\",\"a\",\"createElement\",\"id\",\"action\",\"method\",\"type\",\"name\",\"placeholder\",\"NewLabelForm\",\"e\",\"preventDefault\",\"newLabel\",\"document\",\"forms\",\"elements\",\"value\",\"label\",\"JSON\",\"stringify\",\"newlabel\",\"request\",\"XMLHttpRequest\",\"open\",\"setRequestHeader\",\"getElementById\",\"console\",\"log\",\"send\",\"onreadystatechange\",\"data\",\"onSubmit\",\"this\",\"sendFormNewLabel\",\"className\",\"autoComplete\",\"React\",\"Component\",\"LabelsList\",\"MenuLabels\",\"Labels_LabelsList\",\"Labels_NewLabelForm\",\"NewProjectForm\",\"props\",\"sendFormNewProject\",\"ItemProject\",\"list\",\"ProjectsList\",\"Projects_ItemProject\",\"MenuProjects\",\"_this\",\"Object\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"getObjetProject\",\"responseType\",\"json\",\"response\",\"setState\",\"_ref\",\"asyncToGenerator\",\"regenerator_default\",\"mark\",\"_callee\",\"formSendProject\",\"newProject\",\"project\",\"wrap\",\"_context\",\"prev\",\"next\",\"newproject\",\"stop\",\"_x\",\"apply\",\"arguments\",\"render\",\"obj\",\"state\",\"key\",\"Projects_ProjectsList\",\"Projects_NewProjectForm\",\"bind\",\"assertThisInitialized\",\"Menu\",\"Projects_MenuProjects\",\"Labels_MenuLabels\",\"NewTaskForm\",\"newTask\",\"task\",\"newtask\",\"id_project\",\"sendFormNewTask\",\"ItemTask\",\"UnfinishedTasks\",\"Tasks_ItemTask\",\"FinishedTasks\",\"WorkSpace\",\"Tasks_NewTaskForm\",\"Tasks_UnfinishedTasks\",\"Tasks_FinishedTasks\",\"Content\",\"components_WorkSpace\",\"Wrapper\",\"components_Menu\",\"components_Content\",\"App\",\"components_Header\",\"components_Wrapper\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"src_App\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from \\\"react\\\";\\n\\nconst Header = () => (\\n    <header>\\n        <h1>ToDoList</h1>\\n        <form id=\\\"search-form\\\" action=\\\"/\\\" method=\\\"post\\\">\\n            <input id=\\\"search\\\" type=\\\"search\\\" name=\\\"search\\\" placeholder=\\\"Пошук\\\" />\\n        </form>\\n    </header>\\n    \\n);\\n\\nexport default Header;\",\"import React from \\\"react\\\";\\n\\nclass NewLabelForm extends React.Component {\\n\\n    sendFormNewLabel (e) {\\n        e.preventDefault();\\n        //Get form data\\n        let formSendLabel = document.forms[\\\"form-send-label\\\"];\\n        let newLabel = formSendLabel.elements[\\\"newlabel\\\"].value;\\n        if (newLabel !== \\\"\\\") {\\n            // Serialize data to JSON\\n            let label = JSON.stringify({ newlabel: newLabel });\\n            let request = new XMLHttpRequest();\\n            // Send form to adress \\\"/sendlabel\\\"\\n            request.open(\\\"POST\\\", \\\"/sendlabel\\\", true);\\n            request.setRequestHeader(\\\"Content-Type\\\", \\\"application/json\\\");\\n            // Clear form\\n            document.getElementById('new-label').value = \\\"\\\"\\n            console.log(label);\\n            request.send(label);\\n            request.onreadystatechange = function (data) {\\n                // let json = data.target.response;\\n            }\\n        }\\n    }\\n\\n    render() {\\n        return (\\n            <form id=\\\"form-send-label\\\" name=\\\"form-send-label\\\" onSubmit={this.sendFormNewLabel}>\\n                <input className=\\\"form-add-input\\\" id=\\\"new-label\\\" type=\\\"text\\\" name=\\\"newlabel\\\" autoComplete=\\\"off\\\" /><br />\\n                <input className=\\\"red-button-accept form-add-buttons\\\" id=\\\"send-label\\\" type=\\\"submit\\\" name=\\\"send-label\\\" value=\\\"Додати\\\" />\\n                <input className=\\\"button-cancel form-add-buttons\\\" id=\\\"reset-label\\\" type=\\\"reset\\\" value=\\\"Скасувати\\\" />\\n            </form>\\n        );\\n    }\\n}\\n\\nexport default NewLabelForm;\",\"import React from \\\"react\\\";\\n\\nconst LabelsList = () => (\\n    <ul className=\\\"menu-list\\\" id=\\\"ul-labels-list\\\">\\n                \\n    </ul>\\n);\\n\\nexport default LabelsList;\",\"import React from \\\"react\\\";\\nimport NewLabelForm from './NewLabelForm';\\nimport LabelsList from \\\"./LabelsList\\\";\\n\\nconst MenuLabels = () => (      \\n    <div className=\\\"menu-item\\\" id=\\\"item-label\\\">\\n        <div className=\\\"menu-item-head\\\">\\n            <h4>Мітки</h4><b className=\\\"menu-button-add\\\" id=\\\"add-label\\\"> + </b>\\n        </div>\\n        <div className=\\\"form-add-div\\\" id=\\\"form-add-divlabel\\\">\\n            <LabelsList/>\\n            <div className=\\\"menu-item-headbutton\\\"><b>Нова мітка</b></div>\\n            <NewLabelForm/>\\n        </div>\\n    </div>\\n);\\n\\nexport default MenuLabels;\",\"    import React from \\\"react\\\";\\n\\n    const NewProjectForm = props => (\\n        <form id=\\\"form-send-project\\\" name=\\\"form-send-project\\\" onSubmit={props.sendFormNewProject}>\\n            <input className=\\\"form-add-input\\\" id=\\\"new-project\\\" type=\\\"text\\\" name=\\\"newproject\\\" autoComplete=\\\"off\\\" /><br />\\n            <input className=\\\"red-button-accept form-add-buttons\\\" id=\\\"send-project\\\" type=\\\"submit\\\" name=\\\"send-project\\\" value=\\\"Додати\\\"/>\\n            <input className=\\\"button-cancel form-add-buttons\\\" id=\\\"reset-project\\\" type=\\\"reset\\\" value=\\\"Скасувати\\\" />\\n        </form>\\n    );\\n    \\n\\nexport default NewProjectForm;\",\"import React from \\\"react\\\";\\n\\nconst ItemProject = props => (\\n    // <li className=\\\"projects-list\\\" id={\\\"project-id-\\\" + props.list[id].id_project}>\\n    //     <span className=\\\"menu-span\\\" id={\\\"id-project-\\\" +  props.list[id].id_project}>  { props.list[id].project}  </span>\\n    //     <b id={\\\"three-points-button-project-\\\" +  props.list[id].id_project} className=\\\"three-points-button\\\">···</b>\\n    //     <div className=\\\"buttons-block\\\" id={\\\"buttons-block-project-\\\" + data[id].id_project}>\\n    //         <b id={\\\"change-project-button-\\\" +  props.list[id].id_project} className=\\\"item-change-button\\\">🖉 Редагувати</b>\\n    //         <b id={\\\"remove-project-button-\\\" +  props.list[id].id_project} className=\\\"item-delete-button\\\">X Видалити</b>\\n    //     </div>\\n    // </li>\\n    <li>{props.list}</li>\\n);\\n\\nexport default ItemProject;\",\"import React from \\\"react\\\";\\nimport ItemProject from \\\"./ItemProject\\\";\\n\\n\\nconst ProjectsList = props => (\\n    <ul className=\\\"menu-list\\\" id=\\\"ul-projects-list\\\">\\n        <ItemProject list={props.list} />\\n    </ul>\\n\\n);\\n\\nexport default ProjectsList;\",\"import React from \\\"react\\\";\\nimport NewProjectForm from './NewProjectForm';\\nimport ProjectsList from './ProjectsList';\\n\\nclass MenuProjects extends React.Component {\\n    constructor(){  \\n        super();  \\n        this.state = {  \\n            list: \\\"Тут має бути якийсь проєкт\\\"  \\n        };  \\n        this.sendFormNewProject = this.sendFormNewProject.bind(this);  \\n    }  \\n\\n    componentDidMount() {\\n        this.getObjetProject();\\n    }\\n    \\n    getObjetProject = () => {\\n        let request = new XMLHttpRequest();\\n        request.open('GET', \\\"/projectsList\\\");\\n        request.responseType = 'json';\\n        request.send();\\n        request.onreadystatechange = function() {\\n            let json = request.response;\\n            // console.log(JSON.stringify(json));\\n            this.setState = ({ list: json });\\n        }\\n    }\\n\\n    sendFormNewProject = async (e) => {\\n        e.preventDefault();\\n\\n        let formSendProject = document.forms[\\\"form-send-project\\\"];\\n        let newProject = formSendProject.elements[\\\"newproject\\\"].value;\\n        if (newProject !== \\\"\\\") {\\n            // Serialize data to JSON\\n            let project = JSON.stringify({ newproject: newProject });\\n            let request = new XMLHttpRequest();\\n            // Send form to adress \\\"/sendproject\\\"\\n            request.open(\\\"POST\\\", \\\"/sendproject\\\", true);\\n            request.setRequestHeader(\\\"Content-Type\\\", \\\"application/json\\\");\\n            // Clear form\\n            document.getElementById('new-project').value = \\\"\\\";\\n            console.log(project);\\n            request.send(project);\\n            // request.onreadystatechange = function (data) {\\n            //     let json = data.target.response;\\n            //     this.Object = ({ list: json });\\n            //     for(const key in Object.list) {\\n            //         console.log(json[key].project);\\n            //     }\\n            // }\\n            this.getObjetProject();\\n            // let obj = this.getObjetProject ();\\n            // for(const key in obj) {\\n            //     console.log(obj[key].project);\\n            // }\\n            // this.Object = ({ list: obj});\\n        }\\n    }\\n\\n    render = () => {\\n        let obj = this.state.list;\\n        for(const key in obj) {\\n        console.log(\\\"\\\\nMy list is:\\\" + obj[key].project);\\n        }\\n        return ( \\n            <div className=\\\"menu-item\\\" id=\\\"item-project\\\">\\n                <div className=\\\"menu-item-head\\\" >\\n                    <h4>Проекти</h4><b className=\\\"menu-button-add\\\" id=\\\"add-project\\\"> + </b>\\n                </div>\\n                <div className=\\\"form-add-div\\\" id=\\\"form-add-divproject\\\">\\n                    <ProjectsList list={ this.state.list }/>\\n                    <div className=\\\"menu-item-headbutton\\\"><b>Новий проект</b></div>\\n                    <NewProjectForm sendFormNewProject = {this.sendFormNewProject}/>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default MenuProjects;\\n\",\"import React from \\\"react\\\";\\nimport MenuLabels from './Labels/MenuLabels';\\nimport MenuProjects from './Projects/MenuProjects';\\n\\nconst Menu = () => (\\n<div className=\\\"menu\\\">\\n    <MenuProjects/>\\n    <MenuLabels/>\\n</div>\\n);\\n\\nexport default Menu;\",\"import React from \\\"react\\\";\\n\\nclass NewTaskForm extends React.Component {\\n    sendFormNewTask(e) {\\n        e.preventDefault();\\n        // Get form data\\n        let formSendTask = document.forms[\\\"form-send-task\\\"];\\n        let newTask = formSendTask.elements[\\\"newtask\\\"].value;\\n        if (newTask !== \\\"\\\") {\\n            // Serialize data to JSON\\n            let task = JSON.stringify({ newtask: newTask, id_project: 26 });\\n            let request = new XMLHttpRequest();\\n            // Send form to adress \\\"/sendtask\\\"\\n            request.open(\\\"POST\\\", \\\"/sendtask\\\", true);\\n            request.setRequestHeader(\\\"Content-Type\\\", \\\"application/json\\\");\\n            // Clear form\\n            document.getElementById('new-task').value = \\\"\\\";\\n            request.send(task);\\n            console.log(task);\\n            request.onreadystatechange = function (data) {\\n                // let json = data.target.response;\\n            }\\n        }\\n    }\\n    render() {\\n        return (\\n            <form name=\\\"form-send-task\\\" onSubmit={this.sendFormNewTask}>\\n                <input id=\\\"new-task\\\" type=\\\"text\\\" name=\\\"newtask\\\" autoComplete=\\\"off\\\" /><br />\\n                <input className=\\\"red-button-accept\\\" id=\\\"send-task\\\" type=\\\"submit\\\" name=\\\"send-task\\\" value=\\\"Додати завдання\\\" />\\n                <input className=\\\"button-cancel\\\" type=\\\"reset\\\" value=\\\"Скасувати\\\" />\\n            </form>\\n        );\\n    }\\n}\\nexport default NewTaskForm;\",\"import React from \\\"react\\\";\\n\\nconst ItemTask = props => (\\n    // <li className=\\\"tasks-class\\\" id={\\\"task-id-\\\" + props.list[id].id_task}>\\n    //     <input type=\\\"checkbox\\\" checked id={\\\"checkbox-number-\\\" + props.list[id].id_task} className=\\\"check\\\" />\\n    //     <span className=\\\"task\\\"> {props.list[id].task} </span>\\n    //     <b id={\\\"three-points-button-task-\\\" + props.list[id].id_task} className=\\\"three-points-button\\\">···</b>\\n    //     <div className=\\\"buttons-block\\\" id={\\\"buttons-block-task-\\\" + props.list[id].id_task}>\\n    //         <b id={\\\"change-task-button-\\\" + props.list[id].id_task} className=\\\"item-change-button\\\">🖉 Редагувати</b>\\n    //         <b id={\\\"remove-task-button-\\\" + props.list[id].id_task} className=\\\"item-delete-button\\\">X Видалити</b>\\n    //     </div>\\n    // </li>\\n    <li>{props.list}</li>\\n);\\n\\nexport default ItemTask;\",\"import React from \\\"react\\\";\\nimport ItemTask from \\\"./ItemTask\\\";\\n\\n\\nconst UnfinishedTasks = () => (\\n    <ul id=\\\"ul-unfinished-tasks\\\">\\n        <ItemTask />\\n    </ul>\\n);\\n\\nexport default UnfinishedTasks;\",\"import React from \\\"react\\\";\\nimport ItemTask from \\\"./ItemTask\\\";\\n\\nconst FinishedTasks = () => (\\n    <ul id=\\\"ul-finished-tasks\\\">\\n        <ItemTask />\\n    </ul>\\n);\\n\\nexport default FinishedTasks;\",\"import React from \\\"react\\\";\\nimport NewTaskForm from \\\"./Tasks/NewTaskForm\\\";\\nimport UnfinishedTasks from \\\"./Tasks/UnfinishedTasks\\\";\\nimport FinishedTasks from \\\"./Tasks/FinishedTasks\\\";\\n\\nconst WorkSpace = () => (\\n<div className=\\\"work-space\\\" id=\\\"work-space\\\">\\n    <div className=\\\"add-task\\\">\\n        <h3>Додати завдання</h3>\\n        <NewTaskForm/>\\n    </div>\\n    <div className=\\\"unfinished-tasks\\\" id=\\\"unfinished-tasks-div\\\">\\n        <h3>Незавершені завдання</h3>\\n        <UnfinishedTasks/>\\n    </div>\\n    <div className=\\\"label-tasks\\\">\\n        <div id=\\\"label1\\\"><span>Мітка 1</span></div>\\n        <div id=\\\"label2\\\"><span>Мітка 2</span></div>\\n    </div>\\n    <div className=\\\"finished-tasks\\\">\\n        <h3>Виконані завдання</h3>\\n        <FinishedTasks/>\\n    </div>\\n</div>\\n);\\n\\nexport default WorkSpace;\",\"import React from \\\"react\\\";\\nimport WorkSpace from './WorkSpace';\\n\\nconst Content = () => (\\n<div className=\\\"content\\\">\\n    <WorkSpace/>\\n</div>\\n);\\n\\nexport default Content;\",\"import React from \\\"react\\\";\\nimport Menu from './Menu';\\nimport Content from \\\"./Content\\\";\\n\\nconst Wrapper = () => (\\n<div className=\\\"wrapper\\\">\\n    <Menu/>\\n    <Content/>\\n</div>\\n);\\n\\nexport default Wrapper;\",\"import React from 'react';\\nimport './App.css';\\nimport Header from './components/Header';\\nimport Wrapper from './components/Wrapper';\\n\\nfunction App() {\\n  return (\\n    <div>\\n      <Header />\\n      <Wrapper />\\n    </div>\\n  );\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{11:function(e,t,n){e.exports=n(20)},17:function(e,t,n){},18:function(e,t,n){},20:function(e,t,n){\"use strict\";n.r(t);var a=n(0),l=n.n(a),r=n(9),c=n.n(r),s=(n(17),n(18),function(){return l.a.createElement(\"header\",null,l.a.createElement(\"h1\",null,\"ToDoList\"),l.a.createElement(\"form\",{id:\"search-form\",action:\"/\",method:\"post\"},l.a.createElement(\"input\",{id:\"search\",type:\"search\",name:\"search\",placeholder:\"\\u041f\\u043e\\u0448\\u0443\\u043a\"})))}),o=n(1),m=n(2),i=n(5),u=n(3),d=n(4),p=function(e){function t(){return Object(o.a)(this,t),Object(i.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(m.a)(t,[{key:\"sendFormNewLabel\",value:function(e){e.preventDefault();var t=document.forms[\"form-send-label\"].elements.newlabel.value;if(\"\"!==t){var n=JSON.stringify({newlabel:t}),a=new XMLHttpRequest;a.open(\"POST\",\"/sendlabel\",!0),a.setRequestHeader(\"Content-Type\",\"application/json\"),document.getElementById(\"new-label\").value=\"\",console.log(n),a.send(n),a.onreadystatechange=function(e){}}}},{key:\"render\",value:function(){return l.a.createElement(\"form\",{id:\"form-send-label\",name:\"form-send-label\",onSubmit:this.sendFormNewLabel},l.a.createElement(\"input\",{className:\"form-add-input\",id:\"new-label\",type:\"text\",name:\"newlabel\",autoComplete:\"off\"}),l.a.createElement(\"br\",null),l.a.createElement(\"input\",{className:\"red-button-accept form-add-buttons\",id:\"send-label\",type:\"submit\",name:\"send-label\",value:\"\\u0414\\u043e\\u0434\\u0430\\u0442\\u0438\"}),l.a.createElement(\"input\",{className:\"button-cancel form-add-buttons\",id:\"reset-label\",type:\"reset\",value:\"\\u0421\\u043a\\u0430\\u0441\\u0443\\u0432\\u0430\\u0442\\u0438\"}))}}]),t}(l.a.Component),f=function(){return l.a.createElement(\"ul\",{className:\"menu-list\",id:\"ul-labels-list\"})},E=function(){return l.a.createElement(\"div\",{className:\"menu-item\",id:\"item-label\"},l.a.createElement(\"div\",{className:\"menu-item-head\"},l.a.createElement(\"h4\",null,\"\\u041c\\u0456\\u0442\\u043a\\u0438\"),l.a.createElement(\"b\",{className:\"menu-button-add\",id:\"add-label\"},\" + \")),l.a.createElement(\"div\",{className:\"form-add-div\",id:\"form-add-divlabel\"},l.a.createElement(f,null),l.a.createElement(\"div\",{className:\"menu-item-headbutton\"},l.a.createElement(\"b\",null,\"\\u041d\\u043e\\u0432\\u0430 \\u043c\\u0456\\u0442\\u043a\\u0430\")),l.a.createElement(p,null)))},b=n(7),v=n.n(b),j=n(10),h=n(6),w=function(e){return l.a.createElement(\"form\",{id:\"form-send-project\",name:\"form-send-project\",onSubmit:e.sendFormNewProject},l.a.createElement(\"input\",{className:\"form-add-input\",id:\"new-project\",type:\"text\",name:\"newproject\",autoComplete:\"off\"}),l.a.createElement(\"br\",null),l.a.createElement(\"input\",{className:\"red-button-accept form-add-buttons\",id:\"send-project\",type:\"submit\",name:\"send-project\",value:\"\\u0414\\u043e\\u0434\\u0430\\u0442\\u0438\"}),l.a.createElement(\"input\",{className:\"button-cancel form-add-buttons\",id:\"reset-project\",type:\"reset\",value:\"\\u0421\\u043a\\u0430\\u0441\\u0443\\u0432\\u0430\\u0442\\u0438\"}))},N=function(e){return l.a.createElement(\"li\",null,e.list)},y=function(e){return l.a.createElement(\"ul\",{className:\"menu-list\",id:\"ul-projects-list\"},l.a.createElement(N,{list:e.list}))},k=function(e){function t(){var e;return Object(o.a)(this,t),(e=Object(i.a)(this,Object(u.a)(t).call(this))).getObjetProject=function(){var e=new XMLHttpRequest;e.open(\"GET\",\"/projectsList\"),e.responseType=\"json\",e.send(),e.onreadystatechange=function(){var t=e.response;this.setState={list:t}}},e.sendFormNewProject=function(){var t=Object(j.a)(v.a.mark(function t(n){var a,l,r,c;return v.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:n.preventDefault(),a=document.forms[\"form-send-project\"],\"\"!==(l=a.elements.newproject.value)&&(r=JSON.stringify({newproject:l}),(c=new XMLHttpRequest).open(\"POST\",\"/sendproject\",!0),c.setRequestHeader(\"Content-Type\",\"application/json\"),document.getElementById(\"new-project\").value=\"\",console.log(r),c.send(r),e.getObjetProject());case 4:case\"end\":return t.stop()}},t)}));return function(e){return t.apply(this,arguments)}}(),e.render=function(){var t=e.state.list;for(var n in t)console.log(\"\\nMy list is:\"+t[n].project);return l.a.createElement(\"div\",{className:\"menu-item\",id:\"item-project\"},l.a.createElement(\"div\",{className:\"menu-item-head\"},l.a.createElement(\"h4\",null,\"\\u041f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0438\"),l.a.createElement(\"b\",{className:\"menu-button-add\",id:\"add-project\"},\" + \")),l.a.createElement(\"div\",{className:\"form-add-div\",id:\"form-add-divproject\"},l.a.createElement(y,{list:e.state.list}),l.a.createElement(\"div\",{className:\"menu-item-headbutton\"},l.a.createElement(\"b\",null,\"\\u041d\\u043e\\u0432\\u0438\\u0439 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\")),l.a.createElement(w,{sendFormNewProject:e.sendFormNewProject})))},e.state={list:\"\\u0422\\u0443\\u0442 \\u043c\\u0430\\u0454 \\u0431\\u0443\\u0442\\u0438 \\u044f\\u043a\\u0438\\u0439\\u0441\\u044c \\u043f\\u0440\\u043e\\u0454\\u043a\\u0442\"},e.sendFormNewProject=e.sendFormNewProject.bind(Object(h.a)(e)),e}return Object(d.a)(t,e),Object(m.a)(t,[{key:\"componentDidMount\",value:function(){this.getObjetProject()}}]),t}(l.a.Component),O=function(){return l.a.createElement(\"div\",{className:\"menu\"},l.a.createElement(k,null),l.a.createElement(E,null))},g=function(e){function t(){return Object(o.a)(this,t),Object(i.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(m.a)(t,[{key:\"sendFormNewTask\",value:function(e){e.preventDefault();var t=document.forms[\"form-send-task\"].elements.newtask.value;if(\"\"!==t){var n=JSON.stringify({newtask:t,id_project:26}),a=new XMLHttpRequest;a.open(\"POST\",\"/sendtask\",!0),a.setRequestHeader(\"Content-Type\",\"application/json\"),document.getElementById(\"new-task\").value=\"\",a.send(n),console.log(n),a.onreadystatechange=function(e){}}}},{key:\"render\",value:function(){return l.a.createElement(\"form\",{name:\"form-send-task\",onSubmit:this.sendFormNewTask},l.a.createElement(\"input\",{id:\"new-task\",type:\"text\",name:\"newtask\",autoComplete:\"off\"}),l.a.createElement(\"br\",null),l.a.createElement(\"input\",{className:\"red-button-accept\",id:\"send-task\",type:\"submit\",name:\"send-task\",value:\"\\u0414\\u043e\\u0434\\u0430\\u0442\\u0438 \\u0437\\u0430\\u0432\\u0434\\u0430\\u043d\\u043d\\u044f\"}),l.a.createElement(\"input\",{className:\"button-cancel\",type:\"reset\",value:\"\\u0421\\u043a\\u0430\\u0441\\u0443\\u0432\\u0430\\u0442\\u0438\"}))}}]),t}(l.a.Component),P=function(e){return l.a.createElement(\"li\",null,e.list)},T=function(){return l.a.createElement(\"ul\",{id:\"ul-unfinished-tasks\"},l.a.createElement(P,null))},F=function(){return l.a.createElement(\"ul\",{id:\"ul-finished-tasks\"},l.a.createElement(P,null))},S=function(){return l.a.createElement(\"div\",{className:\"work-space\",id:\"work-space\"},l.a.createElement(\"div\",{className:\"add-task\"},l.a.createElement(\"h3\",null,\"\\u0414\\u043e\\u0434\\u0430\\u0442\\u0438 \\u0437\\u0430\\u0432\\u0434\\u0430\\u043d\\u043d\\u044f\"),l.a.createElement(g,null)),l.a.createElement(\"div\",{className:\"unfinished-tasks\",id:\"unfinished-tasks-div\"},l.a.createElement(\"h3\",null,\"\\u041d\\u0435\\u0437\\u0430\\u0432\\u0435\\u0440\\u0448\\u0435\\u043d\\u0456 \\u0437\\u0430\\u0432\\u0434\\u0430\\u043d\\u043d\\u044f\"),l.a.createElement(T,null)),l.a.createElement(\"div\",{className:\"label-tasks\"},l.a.createElement(\"div\",{id:\"label1\"},l.a.createElement(\"span\",null,\"\\u041c\\u0456\\u0442\\u043a\\u0430 1\")),l.a.createElement(\"div\",{id:\"label2\"},l.a.createElement(\"span\",null,\"\\u041c\\u0456\\u0442\\u043a\\u0430 2\"))),l.a.createElement(\"div\",{className:\"finished-tasks\"},l.a.createElement(\"h3\",null,\"\\u0412\\u0438\\u043a\\u043e\\u043d\\u0430\\u043d\\u0456 \\u0437\\u0430\\u0432\\u0434\\u0430\\u043d\\u043d\\u044f\"),l.a.createElement(F,null)))},C=function(){return l.a.createElement(\"div\",{className:\"content\"},l.a.createElement(S,null))},L=function(){return l.a.createElement(\"div\",{className:\"wrapper\"},l.a.createElement(O,null),l.a.createElement(C,null))};var q=function(){return l.a.createElement(\"div\",null,l.a.createElement(s,null),l.a.createElement(L,null))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(l.a.createElement(q,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[11,1,2]]]);","extractedComments":[]}